// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteStockCompanyParams creates a new DeleteStockCompanyParams object
// with the default values initialized.
func NewDeleteStockCompanyParams() *DeleteStockCompanyParams {
	var ()
	return &DeleteStockCompanyParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteStockCompanyParamsWithTimeout creates a new DeleteStockCompanyParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteStockCompanyParamsWithTimeout(timeout time.Duration) *DeleteStockCompanyParams {
	var ()
	return &DeleteStockCompanyParams{

		timeout: timeout,
	}
}

// NewDeleteStockCompanyParamsWithContext creates a new DeleteStockCompanyParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteStockCompanyParamsWithContext(ctx context.Context) *DeleteStockCompanyParams {
	var ()
	return &DeleteStockCompanyParams{

		Context: ctx,
	}
}

// NewDeleteStockCompanyParamsWithHTTPClient creates a new DeleteStockCompanyParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteStockCompanyParamsWithHTTPClient(client *http.Client) *DeleteStockCompanyParams {
	var ()
	return &DeleteStockCompanyParams{
		HTTPClient: client,
	}
}

/*DeleteStockCompanyParams contains all the parameters to send to the API endpoint
for the delete stock company operation typically these are written to a http.Request
*/
type DeleteStockCompanyParams struct {

	/*Company*/
	Company string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete stock company params
func (o *DeleteStockCompanyParams) WithTimeout(timeout time.Duration) *DeleteStockCompanyParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete stock company params
func (o *DeleteStockCompanyParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete stock company params
func (o *DeleteStockCompanyParams) WithContext(ctx context.Context) *DeleteStockCompanyParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete stock company params
func (o *DeleteStockCompanyParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete stock company params
func (o *DeleteStockCompanyParams) WithHTTPClient(client *http.Client) *DeleteStockCompanyParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete stock company params
func (o *DeleteStockCompanyParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCompany adds the company to the delete stock company params
func (o *DeleteStockCompanyParams) WithCompany(company string) *DeleteStockCompanyParams {
	o.SetCompany(company)
	return o
}

// SetCompany adds the company to the delete stock company params
func (o *DeleteStockCompanyParams) SetCompany(company string) {
	o.Company = company
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteStockCompanyParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param company
	if err := r.SetPathParam("company", o.Company); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
