// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tupyy/stock/models"
)

// GetStockReader is a Reader for the GetStock structure.
type GetStockReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStockReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStockOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetStockBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetStockNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetStockInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetStockOK creates a GetStockOK with default headers values
func NewGetStockOK() *GetStockOK {
	return &GetStockOK{}
}

/*GetStockOK handles this case with default header values.

ok
*/
type GetStockOK struct {
	Payload *models.Stock
}

func (o *GetStockOK) Error() string {
	return fmt.Sprintf("[GET /stock][%d] getStockOK  %+v", 200, o.Payload)
}

func (o *GetStockOK) GetPayload() *models.Stock {
	return o.Payload
}

func (o *GetStockOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Stock)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStockBadRequest creates a GetStockBadRequest with default headers values
func NewGetStockBadRequest() *GetStockBadRequest {
	return &GetStockBadRequest{}
}

/*GetStockBadRequest handles this case with default header values.

bad request
*/
type GetStockBadRequest struct {
}

func (o *GetStockBadRequest) Error() string {
	return fmt.Sprintf("[GET /stock][%d] getStockBadRequest ", 400)
}

func (o *GetStockBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStockNotFound creates a GetStockNotFound with default headers values
func NewGetStockNotFound() *GetStockNotFound {
	return &GetStockNotFound{}
}

/*GetStockNotFound handles this case with default header values.

company not found
*/
type GetStockNotFound struct {
}

func (o *GetStockNotFound) Error() string {
	return fmt.Sprintf("[GET /stock][%d] getStockNotFound ", 404)
}

func (o *GetStockNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStockInternalServerError creates a GetStockInternalServerError with default headers values
func NewGetStockInternalServerError() *GetStockInternalServerError {
	return &GetStockInternalServerError{}
}

/*GetStockInternalServerError handles this case with default header values.

internal error
*/
type GetStockInternalServerError struct {
}

func (o *GetStockInternalServerError) Error() string {
	return fmt.Sprintf("[GET /stock][%d] getStockInternalServerError ", 500)
}

func (o *GetStockInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
