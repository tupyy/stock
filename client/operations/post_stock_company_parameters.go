// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostStockCompanyParams creates a new PostStockCompanyParams object
// with the default values initialized.
func NewPostStockCompanyParams() *PostStockCompanyParams {
	var ()
	return &PostStockCompanyParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostStockCompanyParamsWithTimeout creates a new PostStockCompanyParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostStockCompanyParamsWithTimeout(timeout time.Duration) *PostStockCompanyParams {
	var ()
	return &PostStockCompanyParams{

		timeout: timeout,
	}
}

// NewPostStockCompanyParamsWithContext creates a new PostStockCompanyParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostStockCompanyParamsWithContext(ctx context.Context) *PostStockCompanyParams {
	var ()
	return &PostStockCompanyParams{

		Context: ctx,
	}
}

// NewPostStockCompanyParamsWithHTTPClient creates a new PostStockCompanyParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostStockCompanyParamsWithHTTPClient(client *http.Client) *PostStockCompanyParams {
	var ()
	return &PostStockCompanyParams{
		HTTPClient: client,
	}
}

/*PostStockCompanyParams contains all the parameters to send to the API endpoint
for the post stock company operation typically these are written to a http.Request
*/
type PostStockCompanyParams struct {

	/*Company*/
	Company string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post stock company params
func (o *PostStockCompanyParams) WithTimeout(timeout time.Duration) *PostStockCompanyParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post stock company params
func (o *PostStockCompanyParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post stock company params
func (o *PostStockCompanyParams) WithContext(ctx context.Context) *PostStockCompanyParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post stock company params
func (o *PostStockCompanyParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post stock company params
func (o *PostStockCompanyParams) WithHTTPClient(client *http.Client) *PostStockCompanyParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post stock company params
func (o *PostStockCompanyParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCompany adds the company to the post stock company params
func (o *PostStockCompanyParams) WithCompany(company string) *PostStockCompanyParams {
	o.SetCompany(company)
	return o
}

// SetCompany adds the company to the post stock company params
func (o *PostStockCompanyParams) SetCompany(company string) {
	o.Company = company
}

// WriteToRequest writes these params to a swagger request
func (o *PostStockCompanyParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param company
	if err := r.SetPathParam("company", o.Company); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
