// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetStocksReader is a Reader for the GetStocks structure.
type GetStocksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStocksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStocksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 402:
		result := NewGetStocksPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetStocksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetStocksOK creates a GetStocksOK with default headers values
func NewGetStocksOK() *GetStocksOK {
	return &GetStocksOK{}
}

/*GetStocksOK handles this case with default header values.

ok
*/
type GetStocksOK struct {
	Payload *GetStocksOKBody
}

func (o *GetStocksOK) Error() string {
	return fmt.Sprintf("[GET /stocks][%d] getStocksOK  %+v", 200, o.Payload)
}

func (o *GetStocksOK) GetPayload() *GetStocksOKBody {
	return o.Payload
}

func (o *GetStocksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetStocksOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStocksPaymentRequired creates a GetStocksPaymentRequired with default headers values
func NewGetStocksPaymentRequired() *GetStocksPaymentRequired {
	return &GetStocksPaymentRequired{}
}

/*GetStocksPaymentRequired handles this case with default header values.

method not allowed
*/
type GetStocksPaymentRequired struct {
}

func (o *GetStocksPaymentRequired) Error() string {
	return fmt.Sprintf("[GET /stocks][%d] getStocksPaymentRequired ", 402)
}

func (o *GetStocksPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStocksInternalServerError creates a GetStocksInternalServerError with default headers values
func NewGetStocksInternalServerError() *GetStocksInternalServerError {
	return &GetStocksInternalServerError{}
}

/*GetStocksInternalServerError handles this case with default header values.

Internal error.
*/
type GetStocksInternalServerError struct {
}

func (o *GetStocksInternalServerError) Error() string {
	return fmt.Sprintf("[GET /stocks][%d] getStocksInternalServerError ", 500)
}

func (o *GetStocksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetStocksOKBody get stocks o k body
swagger:model GetStocksOKBody
*/
type GetStocksOKBody struct {

	// companies
	// Required: true
	Companies []string `json:"companies"`
}

// Validate validates this get stocks o k body
func (o *GetStocksOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCompanies(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetStocksOKBody) validateCompanies(formats strfmt.Registry) error {

	if err := validate.Required("getStocksOK"+"."+"companies", "body", o.Companies); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetStocksOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetStocksOKBody) UnmarshalBinary(b []byte) error {
	var res GetStocksOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
