// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PostStockHandlerFunc turns a function with the right signature into a post stock handler
type PostStockHandlerFunc func(PostStockParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostStockHandlerFunc) Handle(params PostStockParams) middleware.Responder {
	return fn(params)
}

// PostStockHandler interface for that can handle valid post stock params
type PostStockHandler interface {
	Handle(PostStockParams) middleware.Responder
}

// NewPostStock creates a new http.Handler for the post stock operation
func NewPostStock(ctx *middleware.Context, handler PostStockHandler) *PostStock {
	return &PostStock{Context: ctx, Handler: handler}
}

/*PostStock swagger:route POST /stock postStock

add a new company to crawler

*/
type PostStock struct {
	Context *middleware.Context
	Handler PostStockHandler
}

func (o *PostStock) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPostStockParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
