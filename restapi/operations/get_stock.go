// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetStockHandlerFunc turns a function with the right signature into a get stock handler
type GetStockHandlerFunc func(GetStockParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetStockHandlerFunc) Handle(params GetStockParams) middleware.Responder {
	return fn(params)
}

// GetStockHandler interface for that can handle valid get stock params
type GetStockHandler interface {
	Handle(GetStockParams) middleware.Responder
}

// NewGetStock creates a new http.Handler for the get stock operation
func NewGetStock(ctx *middleware.Context, handler GetStockHandler) *GetStock {
	return &GetStock{Context: ctx, Handler: handler}
}

/*GetStock swagger:route GET /stock getStock

get stocks

*/
type GetStock struct {
	Context *middleware.Context
	Handler GetStockHandler
}

func (o *GetStock) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetStockParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
