// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This API provide the recent stock value",
    "title": "stock service",
    "version": "0.1"
  },
  "paths": {
    "/stock": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "get stocks",
        "parameters": [
          {
            "type": "string",
            "description": "company stock label",
            "name": "label",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/stock"
            }
          },
          "400": {
            "description": "bad request"
          },
          "404": {
            "description": "company not found"
          },
          "500": {
            "description": "internal error"
          }
        }
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "summary": "add a new company to crawler",
        "parameters": [
          {
            "name": "label",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/company"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created"
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal error"
          }
        }
      }
    },
    "/stocks": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "List all followed companies",
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "array",
              "items": [
                {
                  "type": "string"
                }
              ]
            }
          },
          "402": {
            "description": "method not allowed"
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    }
  },
  "definitions": {
    "company": {
      "type": "object",
      "properties": {
        "label": {
          "description": "stock label",
          "type": "string"
        }
      }
    },
    "stock": {
      "description": "list of stock values",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stockValue"
          }
        }
      },
      "example": {
        "count": 2,
        "values": [
          {
            "label": "RNO",
            "value": 20.22,
            "variation": 2.2
          },
          {
            "label": "AIR",
            "value": 220.2,
            "variation": 2.2
          }
        ]
      }
    },
    "stockValue": {
      "description": "stock value and variation of a company",
      "type": "object",
      "properties": {
        "label": {
          "description": "company label",
          "type": "string"
        },
        "value": {
          "description": "value of the stock company",
          "type": "number"
        },
        "variation": {
          "description": "value of the daily variation of the stock value",
          "type": "number"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This API provide the recent stock value",
    "title": "stock service",
    "version": "0.1"
  },
  "paths": {
    "/stock": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "get stocks",
        "parameters": [
          {
            "type": "string",
            "description": "company stock label",
            "name": "label",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/stock"
            }
          },
          "400": {
            "description": "bad request"
          },
          "404": {
            "description": "company not found"
          },
          "500": {
            "description": "internal error"
          }
        }
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "summary": "add a new company to crawler",
        "parameters": [
          {
            "name": "label",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/company"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created"
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal error"
          }
        }
      }
    },
    "/stocks": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "List all followed companies",
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "array",
              "items": [
                {
                  "type": "string"
                }
              ]
            }
          },
          "402": {
            "description": "method not allowed"
          },
          "500": {
            "description": "Internal error."
          }
        }
      }
    }
  },
  "definitions": {
    "GetStocksOKBodyTuple0": {
      "type": "object",
      "required": [
        "P0"
      ],
      "properties": {
        "P0": {
          "type": "string"
        }
      }
    },
    "company": {
      "type": "object",
      "properties": {
        "label": {
          "description": "stock label",
          "type": "string"
        }
      }
    },
    "stock": {
      "description": "list of stock values",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stockValue"
          }
        }
      },
      "example": {
        "count": 2,
        "values": [
          {
            "label": "RNO",
            "value": 20.22,
            "variation": 2.2
          },
          {
            "label": "AIR",
            "value": 220.2,
            "variation": 2.2
          }
        ]
      }
    },
    "stockValue": {
      "description": "stock value and variation of a company",
      "type": "object",
      "properties": {
        "label": {
          "description": "company label",
          "type": "string"
        },
        "value": {
          "description": "value of the stock company",
          "type": "number",
          "minimum": 0
        },
        "variation": {
          "description": "value of the daily variation of the stock value",
          "type": "number"
        }
      }
    }
  }
}`))
}
